{
  "hash": "b9a8528535a560e3c30ffd1123de735b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog Post 7\"\nauthor: \"\"\ndate: \"2025-04-25\"\ndate-modified: \"2025-04-25\"\ndraft: FALSE\n---\n\n\nThe interactive will be built using Shiny in R and will include clear, guided visuals like line charts and possibly a map view for location-based insights. I'm currently in the process of cleaning the dataset and identifying the most useful variables for filtering and analysis. The interactive aspect—letting users control what data they see—will help highlight interesting patterns and make the experience more personal and impactful.\n\n**Progress**  \nWe’ve explored the NYPD arrest + ACS data and cleaned it into `combined_data`.  That object has borough names, offense description, demographics, coordinates, and unemployment rate—but no date column—so for our “big picture” we’ll start with a static bar chart of arrests by borough, then let the user drill in via filters.\n\n**Interactive**\nWe’re building the Arrest Trends Explorer Shiny dashboard to let users explore NYPD arrest data from multiple angles:\n- A dynamic time-series of total arrests, with the ability to switch between line charts, bar charts, and map overlays.\n- Filters for borough, offense type, and demographic slices (race, sex, age group).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(shiny)\n\ncombined_data <- readRDS(\"dataset/combined_nypd_acs_with_coords_fixed.rds\") %>%\n  mutate(unemployment_rate = as.numeric(unemployment_rate))\n\nboro_choices   <- c(\"All\", sort(unique(combined_data$borough)))\noffense_choices <- c(\"All\", sort(unique(combined_data$ofns_desc)))\nrace_choices   <- c(\"All\", sort(unique(combined_data$perp_race)))\nsex_choices    <- c(\"All\", sort(unique(combined_data$perp_sex)))\nage_choices    <- sort(unique(combined_data$age_group))\n```\n:::\n\n\n\n**Interactive**\nHere’s the Shiny app code for our Arrest Trends Explorer. The main plot is a bar chart of arrests by borough. The sidebar inputs let you filter further by offense or demographic slice.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nui <- fluidPage(\n  titlePanel(\"Arrest Trends Explorer\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"boro\",    \"Borough:\",           choices = boro_choices),\n      selectInput(\"offense\", \"Offense Type:\",      choices = offense_choices),\n      selectInput(\"demo\",    \"Demographic Filter:\", choices = c(\"None\",\"Race\",\"Sex\",\"Age Group\")),\n\n      conditionalPanel(\n        \"input.demo == 'Race'\",\n        selectInput(\"race\", \" Race:\", choices = race_choices)\n      ),\n      conditionalPanel(\n        \"input.demo == 'Sex'\",\n        selectInput(\"sex\", \" Sex:\", choices = sex_choices)\n      ),\n      conditionalPanel(\n        \"input.demo == 'Age Group'\",\n        selectInput(\"age\", \" Age Group:\", choices = age_choices)\n      )\n    ),\n\n    mainPanel(\n      plotOutput(\"barPlot\", height = \"500px\")\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  filtered <- reactive({\n    df <- combined_data\n\n    if (input$boro    != \"All\") df <- df %>% filter(borough   == input$boro)\n    if (input$offense != \"All\") df <- df %>% filter(ofns_desc == input$offense)\n\n    if (input$demo == \"Race\"      && input$race != \"All\")\n      df <- df %>% filter(perp_race == input$race)\n\n    if (input$demo == \"Sex\"       && input$sex  != \"All\")\n      df <- df %>% filter(perp_sex  == input$sex)\n\n    if (input$demo == \"Age Group\" && input$age  != \"\")\n      df <- df %>% filter(age_group == input$age)\n\n    df\n  })\n\n  output$barPlot <- renderPlot({\n    filtered() %>%\n      count(borough) %>%\n      ggplot(aes(x = reorder(borough, n), y = n, fill = borough)) +\n      geom_col(show.legend = FALSE) +\n      coord_flip() +\n      labs(\n        title = \"Number of Arrests by Borough\",\n        x     = NULL,\n        y     = \"Arrest Count\"\n      ) +\n      theme_minimal()\n  })\n}\n\nshinyApp(ui, server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n**Steps Left**\nThe interactive dashboard will let users explore NYPD arrest data from different angles. \n- The goal is to make the data accessible and engaging by allowing users to view big picture trends like total arrests over time. \n- Users will also be able to \"zoom in\" on more specific patterns. \n- Users will be able to filter the data by borough, offense type, and demographic categories such as age or race. \n- This gives them the power to investigate questions that are personally meaningful or socially relevant, such as whether certain neighborhoods experience more arrests for specific types of crimes, or how trends shift over the course of a year.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}